apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" .Release.Name .Values.postgres.service.name }}
  labels:
    {{- include "mynotesapp-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mynotesapp-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "mynotesapp-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.dbCredentialsSecretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.dbCredentialsSecretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "mynotesapp-chart.fullname" . }}-db-config
                  key: POSTGRES_DB
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - $(POSTGRES_USER)
                - -d
                - $(POSTGRES_DB)
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Values.postgres.persistence.volumeName }}
      restartPolicy: Always
      volumes:
        - name: {{ .Values.postgres.persistence.volumeName }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" .Release.Name .Values.postgres.persistence.volumeName }}